class Solution {
    public static int findPartition(int[] nums, int l, int r) {
        int pivot = nums[r];
        int i = l - 1;
        for (int j = l;j < r;j++) {
            if (nums[j] < pivot) {
                i++;
                int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
            }
        }
        int temp = nums[i + 1];
        nums[i + 1] = pivot;
        nums[r] = temp;
        return (i + 1);
    }

    public static void quickSort(int[] nums, int l, int r) {
        if (l < r) {
            int partition = findPartition(nums, l, r);
            quickSort(nums, l, partition - 1);
            quickSort(nums, partition + 1, r);
        }
    }

    public int[] sortArray(int[] nums) {
        quickSort(nums, 0, nums.length - 1);
        return nums;
    }
}