class Solution {
    public static int findMax(int[] nums) {
        int max = nums[0];
        for (int i = 1;i < nums.length;i++) {
            max = Math.max(max, nums[i]);
        }
        return max;
    }

    public static void countingSort(int[] nums, int n, int exp) {
        int[] output = new int[n];
        int[] count = new int[10];
        for(int i : nums) {
            count[(i / exp) % 10]++;
        }
        for(int i = 1;i < 10;i++) {
            count[i] += count[i-1];
        }
        for(int i = n-1;i >= 0;i--) {
            output[count[(nums[i] / exp) % 10] - 1] = nums[i];
            count[(nums[i] / exp) % 10]--;
        }
        for(int i = 0;i < n;i++) {
            nums[i] = output[i];
        }
     }

    public static void radixSort(int[] nums) {
        int max = findMax(nums);
        for(int exp = 1;(max / exp) > 0;exp *= 10) {
            countingSort(nums, nums.length, exp);
        }
    }

    public int[] sortArray(int[] nums) {
        radixSort(nums);
        return nums;
    }
}